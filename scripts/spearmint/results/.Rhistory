print("hello world")
clear
jithu = read.csv(file.choose()) #choose the file when it asks for the file
jithu$Group = factor(jithu$Group, levels = c("Control","Alcohol"))
library(ggplot2)
ggplot(jithu, aes(Group,Value))+geom_boxplot(width = 0.3)+geom_dotplot(binaxis='y',
stackdir='center', dotsize = 0.5, alpha = 0.7)
install.packages("ggplot2")
jithu$Group = factor(jithu$Group, levels = c("Control","Alcohol"))
library(ggplot2)
ggplot(jithu, aes(Group,Value))+geom_boxplot(width = 0.3)+geom_dotplot(binaxis='y',
stackdir='center', dotsize = 0.5, alpha = 0.7)
jithu = read.csv(file.choose()) #choose the file when it asks for the file
head(jithu)
library(reshape2)
install.packages("tidyr")
library(tidyr)
View(jithu)
View(jithu)
jithu1 = gather(jithu,genes,values,DMT:FPN)
head(jithu1)
library(ggplot2)
ggplot(jithu1, aes(Group,values,fill = genes)) + geom_boxplot(width = 0.2)
table(jithu1$Group)
jithu = jithu[! jithu$Group == " ", ]
library(reshape2)
library(tidyr)
jithu1 = gather(jithu,genes,values,DMT:FPN)
library(ggplot2)
ggplot(jithu1, aes(Group,values,fill = genes)) + geom_boxplot(width = 0.2)
nrow(jithu)
tail(jithu)
jithu = na.omit(jithu)
tail(jithu)
library(reshape2)
library(tidyr)
jithu1 = gather(jithu,genes,values,DMT:FPN)
library(ggplot2)
ggplot(jithu1, aes(Group,values,fill = genes)) + geom_boxplot(width = 0.2)
ggplot(jithu1, aes(Group,values,fill = genes)) + geom_boxplot(width = 0.2) + geom_point()
ggplot(jithu1, aes(Group,values,fill = genes)) + geom_boxplot(width = 0.2) + geom_jitter()
ggplot(jithu1, aes(Group,values,fill = genes)) + geom_boxplot(width = 0.2) + geom_jitter(aes(fill = genes))
ggplot(jithu1, aes(Group,values,fill = genes)) + geom_boxplot(width = 0.2) + geom_point(aes(fill = genes))
ggplot(jithu1, aes(Group,values,fill = genes)) + geom_boxplot(width = 0.2) + geom_point(aes(group = genes))
ggplot(jithu1, aes(Group,values,fill = genes)) + geom_boxplot(width = 0.2) + geom_point(aes(x = Group, y = values,fill = genes))
ggplot(jithu1, aes(Group,values,fill = genes)) +  geom_point(aes(x = Group, y = values,fill = genes))
ggplot(jithu1, aes(Group,values,fill = genes)) +  geom_point(aes(x = Group, y = values,colour = genes))
ggplot(jithu1, aes(Group,values,fill = genes)) + geom_boxplot(width = 0.2) + geom_point(aes(x = int, y = values))
library(reshape2)
library(tidyr)
jithu1 = gather(jithu,genes,values,DMT:FPN)
jithu1$int = interaction(jithu1$Group, jithu1$genes)
library(ggplot2)
ggplot(jithu1, aes(Group,values,fill = genes)) + geom_boxplot(width = 0.2) + geom_point(aes(x = int, y = values))
ggplot(jithu1, aes(int,values)) + geom_boxplot(width = 0.2) + geom_point()
ggplot(jithu1, aes(int,values)) + geom_boxplot(width = 0.2) + geom_point(alpha = 0.2)
ggplot(jithu1, aes(int,values)) + geom_boxplot(width = 0.2) + geom_point(alpha = 0.7)
ggplot(jithu1, aes(int,values, fill = genes)) + geom_boxplot(width = 0.2) + geom_point(alpha = 0.7)
ggplot(jithu1, aes(int,values, fill = genes)) + geom_boxplot(width = 0.2) + geom_dotplot(alpha = 0.7)
ggplot(jithu1, aes(int,values, fill = genes)) + geom_boxplot(width = 0.2) + geom_dotplot(binaxis='y',stackdir='center', dotsize = 0.5,alpha = 0.7)
ggplot(jithu1, aes(int,values, fill = genes)) + geom_boxplot(width = 0.2) + geom_dotplot(binaxis='y',stackdir='center', dotsize = 0.5,alpha = 0.7, colour = black)
ggplot(jithu1, aes(int,values, fill = genes)) + geom_boxplot(width = 0.2) + geom_dotplot(binaxis='y',stackdir='center', dotsize = 0.5,alpha = 0.7, colour = "black")
ggplot(jithu1, aes(int,values, fill = genes)) + geom_boxplot(width = 0.2) + geom_dotplot(binaxis='y',stackdir='center', dotsize = 0.5,alpha = 0.7)
ggplot(jithu1, aes(int,values, fill = genes)) + geom_boxplot(width = 0.2) + geom_dotplot(binaxis='y',stackdir='center', dotsize = 0.5,alpha = 0.7
, bins = 10)
ggplot(jithu1, aes(int,values, fill = genes)) + geom_boxplot(width = 0.2) + geom_dotplot(binaxis='y',stackdir='center', dotsize = 0.5,alpha = 0.7)
ggplot(jithu1, aes(int,values)) + geom_boxplot(aes(fill = genes),width = 0.2) + geom_dotplot(binaxis='y',stackdir='center', dotsize = 0.5,alpha = 0.7)
ggplot(jithu1, aes(int,values)) + geom_boxplot(aes(fill = genes),width = 0.2) + geom_dotplot(binaxis='y',stackdir='center', dotsize = 0.5,alpha = 0.5)
?sapply
sapply(1:5,sqrt)
class(sapply(1:5,sqrt))
install.packages("Hmisc")
install.packages("Dropbox/ADNI/ADNIMERGE_0.0.1.tar.gz", repos = NULL, type = "source")
getwd()
ggplot(mtcars, aes(x=mpg, y=qsec, colour=hp))+geom_point(aes(size=cyl))
library(ggplot2)
ggplot(mtcars, aes(x=mpg, y=qsec, colour=hp))+geom_point(aes(size=cyl))
ggplot(mtcars, aes(x=mpg, y=qsec, colour=cyl))+geom_point(aes(size=hp))
df <- data.frame(
+ n=c(1,2,3,4,5),
+ b=c(10,20,30,40,50))
?apply
lst <- list(numbers = 1:10, letters = letters, boolean = c(TRUE, FALSE))
lst
lst$numbers
lst[1]
class(lst$numbers)
class(lst[1])
class(lst[[1]])
lst[[1]]
n
library(biomaRt)
attributePages(mart)
listMarts()
mymart <- useMart('Ensembl Genes')
mymart <- useMart('ensembl')
listDatasets(mymart)
mymart = useMart("ensembl", dataset="hsapiens_gene_ensembl")
quit()
n
plot(c(1,2,3))
getwd()
quit()
n
library(data.table)
dgn = fread("~/Research/metaxcan/dgn.merge")
dgn1 = dgn[1:10000]
head(dgn1)
library(ggplot2)
ggplot(dgn1,aes(VALUE.x,VALUE.y))+geom_point()
ggplot(dgn1,aes(VALUE.x,VALUE.y))+geom_point(size=1)
ggplot(dgn1,aes(VALUE.x,VALUE.y))+geom_point(size=0.5)
ggplot(dgn1,aes(VALUE.x,VALUE.y, colour = factor(GENE)))+geom_point(size=0.5)
getwd()
source('~/.active-rstudio-document', echo=TRUE)
source("https://bioconductor.org/biocLite.R")
biocLite("VariantAnnotation")
library(GenomicRanges)
?seqnames
ls()
dfm = read.table("iterations.tsv", sep = "\t", header = TRUE)
getwd()
setwd("~/Research/hackathon/2016_project_2/scripts/spearmint/results")
library(scatterplot3d)
bar.dfm <- iter.dfm[,c("k","l","N50")]
bar.dfm <- dfm[,c("k","l","N50")]
dfm = read.table("iterations.tsv", sep = "\t", header = TRUE)
library(scatterplot3d)
bar.dfm <- dfm[,c("k","l","N50")]
?scale.y
?scatterplot3d
head(dfm)
library(ggplot2)
library(reshape2)
library(ggplot2)
library(reshape2)
dfm.melt = melt(dfm, id.vars = c("Iteration","N50"))
head(dfm.melt)
dfm$kl = interaction(dfm$k,dfm$l)
dfm.melt = melt(dfm, id.vars = c("Iteration","N50"))
dfm$kl = interaction(dfm$k,dfm$l)
dfm.melt = melt(dfm, id.vars = c("Iteration","N50","kl"))
head(dfm.melt)
ggplot(dfm.melt, aes(Iteration, N50)) + geom_point()
ggplot(dfm.melt, aes(Iteration, N50)) + geom_point() + geom_line()
ggplot(dfm.melt, aes(Iteration, N50, group = kl)) + geom_point() + geom_line()
ggplot(dfm.melt, aes(Iteration, N50, group = factor(kl)) + geom_point() + geom_line()
ggplot(dfm.melt, aes(Iteration, N50, group = factor(kl))) + geom_point() + geom_line()
ggplot(dfm.melt, aes(Iteration, N50, colour = factor(kl))) + geom_point() + geom_line()
ggplot(dfm.melt, aes(Iteration, N50, colour = factor(kl))) + geom_line()
ggplot(dfm.melt, aes(Iteration, N50, colour = factor(k))) + geom_line()
ggplot(dfm, aes(Iteration, N50, colour = factor(k))) + geom_line()
ggplot(dfm, aes(Iteration, N50, colour = factor(l))) + geom_line()
ggplot(dfm, aes(Iteration, N50)) + geom_line()
ggplot(dfm, aes(Iteration, N50)) + geom_line() + geom_point()
ggplot(dfm.melt, aes(Iteration, N50)) + geom_line() + geom_point()
ggplot(dfm.melt, aes(Iteration, N50)) + geom_line() + geom_point(aes(colour = kl))
ggplot(dfm, aes(Iteration, N50)) + geom_line() + geom_point()
ggplot(dfm.melt, aes(Iteration, N50, colour = factor(variable))) + geom_line() + geom_point()
head(dfm.melt)
st(dfm.melt)
head(dfm.melt)
str(dfm.melt)
ggplot(dfm.melt, aes(Iteration, N50, colour = factor(variable))) + geom_point()
ggplot(dfm, aes(Iteration, k) + geom_line() + geom_point()
ggplot(dfm, aes(Iteration, k)) + geom_line() + geom_point()
ggplot(dfm, aes(Iteration, k, colour = N50)) + geom_line() + geom_point()
ggplot(dfm.melt, aes(Iteration, k, colour = N50)) + geom_line() + geom_point()
ggplot(dfm.melt, aes(Iteration, value, colour = N50)) + geom_line() + geom_point()
ggplot(dfm.melt, aes(Iteration,colour = N50)) + geom_line(aes(y = value)) + geom_point()
ggplot(dfm.melt, aes(Iteration,colour = N50)) + geom_line(aes(y = value)) + geom_point(y = value)
ggplot(dfm.melt, aes(Iteration,colour = N50)) + geom_line(aes(y = dfm.melt$value)) + geom_point(y = dfm.melt$value)
ggplot(dfm, aes(Iteration,colour = N50)) + geom_line(aes(y = dfm.melt$k)) + geom_point(y = dfm.melt$k)
ggplot(dfm, aes(Iteration,k,colour = N50)) + geom_line()
ggplot(dfm, aes(Iteration,k,colour = N50)) + geom_line() + geom_line(data = dfm, aes(Iteration,l))
ggplot(dfm, aes(Iteration,k)) + geom_line() + geom_line(data = dfm, aes(Iteration,l))
ggplot(dfm, aes(Iteration,k)) + geom_line() + geom_line(data = dfm, aes(Iteration,l), colour = "red")
ggplot(dfm, aes(Iteration,k)) + geom_line(colour = "blue") + geom_line(data = dfm, aes(Iteration,l), colour = "red")
ggplot(dfm, aes(Iteration,k)) + geom_line(colour = "blue") + geom_line(data = dfm, aes(Iteration,l), colour = "red")
ggplot(dfm, aes(Iteration,k)) + geom_line() + geom_line(data = dfm, aes(Iteration,l), type = "dotted")
ggplot(dfm, aes(Iteration,k)) + geom_line() + geom_line(data = dfm, aes(Iteration,l), linetype=2)
ggplot(dfm, aes(Iteration,k)) + geom_line() + geom_line(data = dfm, aes(Iteration,l, colour = N50), linetype=2)
ggplot(dfm, aes(Iteration,k)) + geom_line() + geom_line(data = dfm, aes(Iteration,l), linetype=2)
ggplot(dfm, aes(Iteration,k)) + geom_line() + geom_line(data = dfm, aes(Iteration,l))
dfm.mat = acast(dfm, k ~ l, value.var = "N50")
ggplot(dfm, aes(Iteration,k)) + geom_line() + geom_line(data = dfm, aes(Iteration,l, ))
dfm.mat = acast(dfm, k ~ l, value.var = "N50")
head(dfm.mat)
?data.matrix
dfm.data.matrix = data.matrix(dfm.mat)
head(dfm.data.matrix)
?heatmap
dfm_heatmap = heatmap(dfm.data.matrix, Rowv=NA, Colv=NA, col = cm.colors(256),scale="column")
dfm_heatmap = heatmap(dfm.data.matrix, Rowv=NA, Colv=NA, col = cm.colors(256),scale="column", margins=c(5,10))
dfm.mat[ is.na(dfm.mat),] = 0
dfm.mat = acast(dfm, k ~ l, value.var = "N50")
class(dfm.mat)
dfm.mat[ is.na(dfm.mat)] = 0
dfm.data.matrix = data.matrix(dfm.mat)
dfm_heatmap = heatmap(dfm.data.matrix, Rowv=NA, Colv=NA, col = cm.colors(256),scale="column", margins=c(5,10))
dfm.mat = acast(dfm, k ~ l, value.var = "N50")
dfm.data.matrix = data.matrix(dfm.mat)
dfm_heatmap = heatmap(dfm.data.matrix, Rowv=NA, Colv=NA, col = cm.colors(256),scale="column", margins=c(5,10))
dfm.mat[ is.na(dfm.mat)] = 0
dfm.data.matrix = data.matrix(dfm.mat)
dfm_heatmap = heatmap(dfm.data.matrix, Rowv=NA, Colv=NA, col = cm.colors(256),scale="column", margins=c(5,10))
?heatmap
dfm_heatmap = heatmap(dfm.data.matrix, Rowv=NA, Colv=NA, col = cm.colors(256), margins=c(5,10))
dfm.data.matrix
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv")
head(nba)
nba.m <- melt(nba)
head(nba.m)
dfm.melt = melt(dfm.mat)
head(dfm.melt)
head(nba.m)
nba.m <- ddply(nba.m, .(variable), transform,
+     rescale = rescale(value))
nba.m <- ddply(nba.m, .(variable), transform,
+     rescale = rescale(value))
nba.m <- ddply(nba.m, .(variable), transform, +rescale = rescale(value))
nba.m <- ddply(nba.m, .(variable), transform, + rescale(value))
library(plyr)
nba.m <- ddply(nba.m, .(variable), transform, + rescale = rescale(value))
nba.m <- ddply(nba.m, .(variable), transform, + rescale(value))
library(reshape2)
library(scales)
nba.m <- ddply(nba.m, .(variable), transform, + rescale = rescale(value))
library(reshape)
nba.m <- ddply(nba.m, .(variable), transform, + rescale = rescale(value))
library(scales)
nba.m <- ddply(nba.m, .(variable), transform, + rescale = rescale(value))
nba.m <- ddply(nba.m, .(variable), transform, rescale = rescale(value))
head(nba.m)
head(dfm.melt)
head(nba.m)
head(dfm.melt)
dfm.melt.m = ddply(dfm.melt, .(var2), transform, rescale = rescale(value))
head(dfm.melt)
dfm.melt.m = ddply(dfm.melt, .(Var2), transform, rescale = rescale(value))
ggplot(dfm.melt, aes(Var2,Var1)) + geom_tile(aes(fill = rescale), colour = "white")
ggplot(dfm.melt.m, aes(Var2,Var1)) + geom_tile(aes(fill = rescale), colour = "white")
head(dfm.melt)
str(dfm.melt)
dfm.melt$Var1 = as.factor(dfm.melt$Var1)
dfm.melt$Var2 = as.factor(dfm.melt$Var2)
ggplot(dfm.melt.m, aes(Var2,Var1)) + geom_tile(aes(fill = rescale), colour = "white")
dfm.melt = melt(dfm.mat)
dfm.melt$Var1 = as.factor(dfm.melt$Var1)
dfm.melt$Var2 = as.factor(dfm.melt$Var2)
dfm.melt.m = ddply(dfm.melt, .(Var2), transform, rescale = rescale(value))
ggplot(dfm.melt.m, aes(Var2,Var1)) + geom_tile(aes(fill = rescale), colour = "white")
dfm.data.matrix = data.matrix(dfm.mat)
dfm_heatmap = heatmap(dfm.data.matrix, Rowv=NA, Colv=NA, col = cm.colors(256), margins=c(5,10))
dfm.mat = acast(dfm, k ~ l, value.var = "N50")
dfm.data.matrix = data.matrix(dfm.mat)
dfm_heatmap = heatmap(dfm.data.matrix, Rowv=NA, Colv=NA, col = cm.colors(256), margins=c(5,10))
dfm.melt = melt(dfm.mat)
dfm.melt$Var1 = as.factor(dfm.melt$Var1)
dfm.melt$Var2 = as.factor(dfm.melt$Var2)
dfm.melt.m = ddply(dfm.melt, .(Var2), transform, rescale = rescale(value))
ggplot(dfm.melt.m, aes(Var2,Var1)) + geom_tile(aes(fill = rescale), colour = "white")
ggplot(dfm.melt.m, aes(Var2,Var1)) + geom_tile(aes(fill = value), colour = "white")
head(dfm/matrix())
head(dfm.matrix)
head(dfm.mat)
head(dfm.melt)
dfm = read.table("iterations.tsv", sep = "\t", header = TRUE)
head(dfm)
head(dfm.matrix)
dfm.matrix = acast(dfm, k ~ l, value.var = "N50")
head(dfm.matrix)
dfm.matrix = acast(dfm, k ~ l, value.var = c("N50","Iteration")
dfm.matrix = acast(dfm, k ~ l, value.var = c("N50","Iteration"))
head(dfm)
head(dfm.mat)
head(dfm.mattrix)
dfm.matrix = acast(dfm, k ~ l, value.var = c"N50")
dfm.matrix = acast(dfm, k ~ l, value.var = "N50")
